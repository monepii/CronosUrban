import 'package:flutter/material.dart';
import 'package:latlong2/latlong.dart';

class PredefinedRoute {
  final String name;
  final String description;
  final LatLng start;
  final LatLng end;
  final String estimatedTime;
  final List<String> stops;
  final List<LatLng> stopCoordinates;
  final List<LatLng> waypoints;
  final String schedule;

  PredefinedRoute({
    required this.name,
    required this.description,
    required this.start,
    required this.end,
    required this.estimatedTime,
    required this.stops,
    required this.stopCoordinates,
    required this.waypoints,
    required this.schedule,
  });
}

class PredefinedRoutesScreen extends StatelessWidget {
  PredefinedRoutesScreen({super.key});

  final List<PredefinedRoute> routes = [
    PredefinedRoute(
      name: 'Ruta Escuela Médico Militar - Eje 4 Sur',
      description: 'Ruta desde La Merced hasta Granjas México - Paradas en toda la ruta',
      start: LatLng(19.42469, -99.13087), // Inicio exacto del KML
      end: LatLng(19.39706, -99.09919),   // Final exacto del KML
      estimatedTime: '35 minutos',
      stops: [],  // No hay paradas específicas, se puede parar en toda la ruta
      stopCoordinates: [], // No hay coordenadas de paradas específicas
      waypoints: [
        // Coordenadas exactas del KML en orden
        LatLng(19.42469, -99.13087),
        LatLng(19.42436, -99.13092),
        LatLng(19.42396, -99.13097),
        LatLng(19.42359, -99.13101),
        LatLng(19.42352, -99.13102),
        LatLng(19.42348, -99.13103),
        LatLng(19.42343, -99.13065),
        LatLng(19.42340, -99.13047),
        LatLng(19.42328, -99.12953),
        LatLng(19.42324, -99.12925),
        LatLng(19.42321, -99.12904),
        LatLng(19.42320, -99.12893),
        LatLng(19.42318, -99.12879),
        LatLng(19.42313, -99.12841),
        LatLng(19.42295, -99.12841),
        LatLng(19.42287, -99.12840),
        LatLng(19.42270, -99.12837),
        LatLng(19.42261, -99.12834),
        LatLng(19.42255, -99.12832),
        LatLng(19.42240, -99.12826),
        LatLng(19.42188, -99.12797),
        LatLng(19.42175, -99.12791),
        LatLng(19.42136, -99.12768),
        LatLng(19.42127, -99.12764),
        LatLng(19.42123, -99.12762),
        LatLng(19.42070, -99.12735),
        LatLng(19.42028, -99.12715),
        LatLng(19.42009, -99.12718),
        LatLng(19.41981, -99.12723),
        LatLng(19.41967, -99.12725),
        LatLng(19.41902, -99.12736),
        LatLng(19.41868, -99.12741),
        LatLng(19.41802, -99.12752),
        LatLng(19.41785, -99.12755),
        LatLng(19.41768, -99.12757),
        LatLng(19.41750, -99.12760),
        LatLng(19.41742, -99.12761),
        LatLng(19.41705, -99.12767),
        LatLng(19.41663, -99.12773),
        LatLng(19.41598, -99.12783),
        LatLng(19.41556, -99.12792),
        LatLng(19.41484, -99.12803),
        LatLng(19.41462, -99.12807),
        LatLng(19.41402, -99.12816),
        LatLng(19.41401, -99.12816),
        LatLng(19.41392, -99.12818),
        LatLng(19.41387, -99.12818),
        LatLng(19.41380, -99.12818),
        LatLng(19.41377, -99.12819),
        LatLng(19.41373, -99.12819),
        LatLng(19.41347, -99.12820),
        LatLng(19.41347, -99.12797),
        LatLng(19.41347, -99.12785),
        LatLng(19.41349, -99.12738),
        LatLng(19.41351, -99.12676),
        LatLng(19.41353, -99.12616),
        LatLng(19.41353, -99.12606),
        LatLng(19.41357, -99.12492),
        LatLng(19.41359, -99.12440),
        LatLng(19.41360, -99.12429),
        LatLng(19.41360, -99.12404),
        LatLng(19.41361, -99.12395),
        LatLng(19.41361, -99.12370),
        LatLng(19.41362, -99.12363),
        LatLng(19.41362, -99.12360),
        LatLng(19.41362, -99.12351),
        LatLng(19.41363, -99.12316),
        LatLng(19.41363, -99.12312),
        LatLng(19.41364, -99.12292),
        LatLng(19.41364, -99.12281),
        LatLng(19.41365, -99.12274),
        LatLng(19.41367, -99.12229),
        LatLng(19.41367, -99.12208),
        LatLng(19.41369, -99.12179),
        LatLng(19.41373, -99.12161),
        LatLng(19.41376, -99.12150),
        LatLng(19.41378, -99.12126),
        LatLng(19.41379, -99.12092),
        LatLng(19.41379, -99.12091),
        LatLng(19.41381, -99.12049),
        LatLng(19.41383, -99.12007),
        LatLng(19.41383, -99.12002),
        LatLng(19.41385, -99.11964),
        LatLng(19.41387, -99.11921),
        LatLng(19.41388, -99.11891),
        LatLng(19.41389, -99.11879),
        LatLng(19.41391, -99.11836),
        LatLng(19.41394, -99.11777),
        LatLng(19.41397, -99.11712),
        LatLng(19.41398, -99.11697),
        LatLng(19.41399, -99.11669),
        LatLng(19.41401, -99.11626),
        LatLng(19.41402, -99.11596),
        LatLng(19.41402, -99.11591),
        LatLng(19.41401, -99.11584),
        LatLng(19.41399, -99.11574),
        LatLng(19.41397, -99.11547),
        LatLng(19.41396, -99.11538),
        LatLng(19.41395, -99.11531),
        LatLng(19.41391, -99.11478),
        LatLng(19.41387, -99.11436),
        LatLng(19.41383, -99.11390),
        LatLng(19.41380, -99.11345),
        LatLng(19.41378, -99.11323),
        LatLng(19.41378, -99.11317),
        LatLng(19.41377, -99.11314),
        LatLng(19.41377, -99.11311),
        LatLng(19.41377, -99.11305),
        LatLng(19.41384, -99.11289),
        LatLng(19.41376, -99.11290),
        LatLng(19.41375, -99.11290),
        LatLng(19.41374, -99.11290),
        LatLng(19.41368, -99.11291),
        LatLng(19.41360, -99.11291),
        LatLng(19.41338, -99.11293),
        LatLng(19.41307, -99.11296),
        LatLng(19.41292, -99.11298),
        LatLng(19.41271, -99.11300),
        LatLng(19.41253, -99.11301),
        LatLng(19.41214, -99.11303),
        LatLng(19.41210, -99.11305),
        LatLng(19.41208, -99.11305),
        LatLng(19.41206, -99.11306),
        LatLng(19.41203, -99.11306),
        LatLng(19.41201, -99.11306),
        LatLng(19.41199, -99.11307),
        LatLng(19.41197, -99.11307),
        LatLng(19.41194, -99.11308),
        LatLng(19.41188, -99.11308),
        LatLng(19.41169, -99.11311),
        LatLng(19.41132, -99.11315),
        LatLng(19.41086, -99.11319),
        LatLng(19.41024, -99.11327),
        LatLng(19.41007, -99.11329),
        LatLng(19.40991, -99.11331),
        LatLng(19.40966, -99.11334),
        LatLng(19.40930, -99.11338),
        LatLng(19.40918, -99.11339),
        LatLng(19.40841, -99.11346),
        LatLng(19.40811, -99.11350),
        LatLng(19.40752, -99.11356),
        LatLng(19.40741, -99.11358),
        LatLng(19.40718, -99.11360),
        LatLng(19.40680, -99.11364),
        LatLng(19.40659, -99.11366),
        LatLng(19.40620, -99.11370),
        LatLng(19.40618, -99.11373),
        LatLng(19.40616, -99.11376),
        LatLng(19.40614, -99.11379),
        LatLng(19.40612, -99.11381),
        LatLng(19.40610, -99.11383),
        LatLng(19.40606, -99.11385),
        LatLng(19.40606, -99.11386),
        LatLng(19.40605, -99.11386),
        LatLng(19.40604, -99.11386),
        LatLng(19.40603, -99.11387),
        LatLng(19.40602, -99.11387),
        LatLng(19.40601, -99.11387),
        LatLng(19.40599, -99.11388),
        LatLng(19.40597, -99.11389),
        LatLng(19.40595, -99.11390),
        LatLng(19.40592, -99.11390),
        LatLng(19.40590, -99.11390),
        LatLng(19.40588, -99.11390),
        LatLng(19.40585, -99.11390),
        LatLng(19.40583, -99.11390),
        LatLng(19.40580, -99.11390),
        LatLng(19.40577, -99.11389),
        LatLng(19.40574, -99.11388),
        LatLng(19.40571, -99.11387),
        LatLng(19.40568, -99.11386),
        LatLng(19.40565, -99.11385),
        LatLng(19.40563, -99.11383),
        LatLng(19.40560, -99.11381),
        LatLng(19.40556, -99.11378),
        LatLng(19.40555, -99.11377),
        LatLng(19.40554, -99.11376),
        LatLng(19.40554, -99.11375),
        LatLng(19.40539, -99.11375),
        LatLng(19.40503, -99.11376),
        LatLng(19.40500, -99.11347),
        LatLng(19.40493, -99.11292),
        LatLng(19.40493, -99.11289),
        LatLng(19.40492, -99.11285),
        LatLng(19.40491, -99.11272),
        LatLng(19.40489, -99.11267),
        LatLng(19.40483, -99.11227),
        LatLng(19.40480, -99.11204),
        LatLng(19.40473, -99.11152),
        LatLng(19.40472, -99.11149),
        LatLng(19.40455, -99.11026),
        LatLng(19.40441, -99.10931),
        LatLng(19.40430, -99.10855),
        LatLng(19.40426, -99.10825),
        LatLng(19.40423, -99.10810),
        LatLng(19.40400, -99.10802),
        LatLng(19.40316, -99.10771),
        LatLng(19.40212, -99.10733),
        LatLng(19.40211, -99.10723),
        LatLng(19.40197, -99.10625),
        LatLng(19.40190, -99.10576),
        LatLng(19.40186, -99.10552),
        LatLng(19.40185, -99.10543),
        LatLng(19.40180, -99.10513),
        LatLng(19.40166, -99.10410),
        LatLng(19.40159, -99.10364),
        LatLng(19.40143, -99.10242),
        LatLng(19.40126, -99.10130),
        LatLng(19.40125, -99.10125),
        LatLng(19.40124, -99.10114),
        LatLng(19.40122, -99.10101),
        LatLng(19.40118, -99.10077),
        LatLng(19.40117, -99.10072),
        LatLng(19.40101, -99.09960),
        LatLng(19.40094, -99.09914),
        LatLng(19.40089, -99.09885),
        LatLng(19.40086, -99.09860),
        LatLng(19.40039, -99.09869),
        LatLng(19.40015, -99.09873),
        LatLng(19.39990, -99.09877),
        LatLng(19.39973, -99.09880),
        LatLng(19.39951, -99.09884),
        LatLng(19.39932, -99.09887),
        LatLng(19.39889, -99.09893),
        LatLng(19.39884, -99.09894),
        LatLng(19.39797, -99.09906),
        LatLng(19.39728, -99.09916),
        LatLng(19.39706, -99.09919),
      ],
      schedule: '6:00 AM - 10:00 PM',
    ),
    PredefinedRoute(
      name: 'Ruta Metro Constitución - UAM Iztapalapa',
      description: 'Ruta que conecta Metro Constitución con la UAM Iztapalapa',
      start: LatLng(19.4179, -99.1408),
      end: LatLng(19.3614, -99.0741),
      estimatedTime: '40 minutos',
      stops: [],
      stopCoordinates: [],
      waypoints: [
        LatLng(19.4179, -99.1408), // Metro Constitución
        LatLng(19.4150, -99.1350),
        LatLng(19.4120, -99.1300),
        LatLng(19.4080, -99.1250),
        LatLng(19.4050, -99.1200),
        LatLng(19.4000, -99.1150),
        LatLng(19.3950, -99.1100),
        LatLng(19.3900, -99.1050),
        LatLng(19.3850, -99.1000),
        LatLng(19.3800, -99.0950),
        LatLng(19.3750, -99.0900),
        LatLng(19.3700, -99.0850),
        LatLng(19.3650, -99.0800),
        LatLng(19.3614, -99.0741), // UAM Iztapalapa
      ],
      schedule: '5:00 AM - 11:00 PM',
    ),
    PredefinedRoute(
      name: 'Ruta Metro Zapata - CU UNAM',
      description: 'Ruta que conecta Metro Zapata con Ciudad Universitaria',
      start: LatLng(19.4071, -99.1650),
      end: LatLng(19.3247, -99.1909),
      estimatedTime: '45 minutos',
      stops: [],
      stopCoordinates: [],
      waypoints: [
        LatLng(19.4071, -99.1650), // Metro Zapata
        LatLng(19.4000, -99.1670),
        LatLng(19.3950, -99.1690),
        LatLng(19.3900, -99.1710),
        LatLng(19.3850, -99.1730),
        LatLng(19.3800, -99.1750),
        LatLng(19.3750, -99.1770),
        LatLng(19.3700, -99.1790),
        LatLng(19.3650, -99.1810),
        LatLng(19.3600, -99.1830),
        LatLng(19.3550, -99.1850),
        LatLng(19.3500, -99.1870),
        LatLng(19.3450, -99.1890),
        LatLng(19.3247, -99.1909), // CU UNAM
      ],
      schedule: '5:30 AM - 10:30 PM',
    ),
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Rutas Disponibles'),
        elevation: 0,
      ),
      body: ListView.builder(
        itemCount: routes.length,
        padding: const EdgeInsets.all(16),
        itemBuilder: (context, index) {
          final route = routes[index];
          return Card(
            margin: const EdgeInsets.only(bottom: 16),
            child: ExpansionTile(
              title: Text(
                route.name,
                style: const TextStyle(fontWeight: FontWeight.bold),
              ),
              subtitle: Text(route.estimatedTime),
              children: [
                Padding(
                  padding: const EdgeInsets.all(16),
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Text(
                        route.description,
                        style: const TextStyle(fontSize: 14),
                      ),
                      const SizedBox(height: 16),
                      Row(
                        children: [
                          const Icon(Icons.access_time),
                          const SizedBox(width: 8),
                          Text('Horario: ${route.schedule}'),
                        ],
                      ),
                      const SizedBox(height: 16),
                      SizedBox(
                        width: double.infinity,
                        child: ElevatedButton(
                          onPressed: () {
                            Navigator.pop(context, route);
                          },
                          child: const Text('Ver en Mapa'),
                        ),
                      ),
                    ],
                  ),
                ),
              ],
            ),
          );
        },
      ),
    );
  }
} 